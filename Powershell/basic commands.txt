>>>Process management on computer

There are a number of different commands used in powershell that are similar to bash.
The first set are get commands:
get-service <<This returns all services active and inactive
get-process <<This returns only running process along with process info

Ex: get-process waterfox <<Returns info like pid, usage, etc
stop-process <<Used to kill process, but you have to use pid instead of process name
kill <<This is the same as stop-process/service
***If you want to kill a process using the name instead of the PID, add -process name in between the command and the process name***
Ex: we want to kill notepad, we'd use the following
kill -processname notepad
start-process <<Starts a process, but you use process name instead of pid


>>>System navigation

Navigation commands are a hybrid of bash and cmd:
ls <<list directory contents
dir <<is the same thing as ls
cd << change directory
	cd .. << goes back one level
	cd / <<goes to root directory
<tab key> << auto complete
***In order to deal with files that have a spaces in their name, use a typeset apostrophe instead of a tick 
mark***

For instance, we need to navigate into a directory that has a space in the name "my documents", we would use the 
following command:
cd my` documents

Alternatively, in order to deal with spaces, it is possible to wrap the entire name in quotes to treat it as a 
string. The entire path would have to be wrapped and not just the folder. 

Example: We want to create a directory called "my stuff"
mkdir "my stuff"

Example 2: There is the folder "my documents" within the folder "stuff"
cd ".\stuff\my documents"


>>>Creation and deletion

There are also a series of commands that are similar to bash commands for creation and deletion:
mkdir <<makes a directory
rmdir <<deletes a directory
echo $null > <file name> <<same as the touch command to make empty files
<<<<<rm on a directory that has children will prompt for recursive delete>>>>>
